  ---
layout      : 'default'
css         : 'guide'

title       : 'Lokale Documentatie'
description : 'Een gids voor het genereren van lokale documentatie'
type        : 'Semantic Project'
---
<script src="/javascript/intro.js"></script>

<%- @partial('header') %>
<div class="main container">
  <div class="peek">
    <div class="ui vertical pointing secondary menu">
      <a class="active item">Installatie Stappen</a>
      <a class="item">Grunt Gebruiken</a>
    </div>
  </div>

  <h2 class="ui dividing header">Stap voor Stap</h2>

  <p>Het kan handig zijn om de ontwikkel documentatie lokaal te draaien wanneer je aan een geforkede versie van Semantic werkt, sinds de documentatie zelf help in het testen van wijzigingen aan ui componenten.</p>

  <h3 class="ui header">1. Installeer Node</h3>
  <p>Semantic documentatie is geschreven in DocPad wat NodeJS vereist. </p>

  <div class="ui warning message">Zorg ervoor dat npm geen sudo vereist om te werken, dit kan voor permissie problemen zorgen.</div>

  <p>Er zijn veel handleidingen online over hoe je node in jouw omgeving kan installeren, hier zijn een paar die wij nuttig vonden:</p>

  <ul class="ui list">
    <li><a href="https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager">Node JS via Package Manager</a></li>
    <li><a href="https://gist.github.com/isaacs/579814">Node JS installeren zonder sudo</a></li>
  </ul>

  <h3 class="ui header">2. Fork Semantic</h3>

  <iframe src="http://ghbtns.com/github-btn.html?user=semantic-org&repo=semantic-ui&type=fork&count=true&size=large"
  allowtransparency="true" frameborder="0" scrolling="0" width="90" height="30"></iframe>
  <p>Fork de Semantic repository in een directory op je lokale machine en navigeer naar die directory</p>

  <p>Een andere optie is om <a href="https://github.com/Semantic-Org/Semantic-UI/archive/master.zip">de hele repository als zip te downloaden</a> in plaats van Git te gebruiken.</p>

  <h3 class="ui header">3. Installeer Afhankelijkheden</h3>
  <p>NPM (Node Package Manager) houdt alle afhankelijkheden bij die benodigd zijn voor het project.</p>

  <p>NPM updaten in de lokale directory zal alle ontwikkel afhankelijkheden ophalen via <code>package.json</code> en ze opslaan in de root van het project.</p>

  <div class="code" data-title="Afhankelijkheden installeren" data-type="terminal">
    npm update; npm install;
  </div>

  <h3 class="ui header">4a Packages Maken voor Server</h3>


  <p>Erbij komt dat je server de laatste versie gebouwd dient te hebben van Semantic alvorens de documentatie correct getoond zal worden. Het uitvoeren van <code>grunt build</code> zal een versie van de bibliotheek maken beschikbaar maken voor je server in de <code>docs/build</code> directory.</p>

  <div class="code" data-title="Semantic updaten voor docs" data-type="terminal">
    grunt build
  </div>
  <h3 class="ui header">4b Files In De Gaten Houden</h3>

  <p>Docpad zal automatisch een statische (html/css only) versie van de documentatie maken, elke keer als je een bestand in <code>server/</code> aanpast.</p>

  <p>Als je wilt dat Semantic gebouwd wordt iedere keer dat je een bestand aanpast in de <code>src/</code> directory, zul je het grunt watch script moeten uitvoeren.</p>

  <div class="code" data-title="Afhankelijkheden installeren" data-type="terminal">
    grunt watch;
  </div>

  <h3 class="ui header">4c. Start Je Server</h3>

  <p>Nu je alle afhankelijkheden hebt geinstalleerd, zou het starten van je server een simpel commando moeten zijn</p>

  <div class="code" data-title="Server lokaal starten" data-type="terminal">
    docpad run
  </div>

  <p>Docpad zou nu de documentatie op een lokale server moeten draaien die beschikbaar is onder <code>http://localhost:9778</code></p>

  <p>Een statische versie van de documentation wordt gegenereerd elke keer als je een wijziging maakt aan een document. Dit zal ook beschikbaar zijn in de <code>docs/</code> folder.

  <h3 class="ui header">5. (Optioneel) Installeer Karma</h3>

  <p>
    Unit tests zijn geschreven in Jasmine, maak worden gedraaid met behulp van een test runner genaamd Karma. Om Karma te installeren dien je het npm package te grijpen.
  </p>
  <div class="code" data-title="Test Runner Installeren" data-type="terminal">
    npm install -g karma
  </div>

  <p>Karma installeren stelt je in staat om de unit tests voor Javascript te draaien zodat je kan controleren of alle tests oke zijn bij het maken van aanpassingen aan javascript code. Dit gebeurt ook automatisch wanneer je een pull request maakt.</p>

  <h2 class="ui dividing header">Grunt Gebruiken</h2>

  <h3 class="ui header">Wijzigingen in de Broncode Bekijken</h3>

  <p>Als je werkt aan het oplossen van een probleem met een UI component dat onderdeel is van Semantic, is het het beste om actief te werken aan het bestand in <code>/src/{type}/{elementname}/</code> terwijl je een watch script van grunt draait. Dit zal de documentatie herbouwen nadat je wijzigingen maakt, zodat je kan zien of je het probleem dat je probeert te repareren hebt opgelost.</p>

  <p>Om exact te zien wat deze grunt taken aan het doen zijn, bekijk onze <a href="https://github.com/semantic-org/Semantic-UI/blob/master/Gruntfile.js">becommentarieerde gruntfile</a></p>

  <div class="code" data-title="Wijzigingen in de gaten houden" data-type="terminal">
    grunt
  </div>

  <p>De watch taak is de standaard grunt taak voor Semantic, dus kan je het zeer eenvoudig opstarten. Dit zal automatisch bestanden van de <code>src</code> directory kopieren, de LESS bestanden compileren, wanneer er wijzigingen zijn gemaakt.</p>

  <h3 class="ui header">Unit Tests Draaien</h3>
  <p>Tests zullen automatisch draaien met <code>grunt watch</code> als je Karma hebt gestart</p>

  <div class="code" data-title="Tests draaien terwijl je ontwikkeld" data-type="terminal">
    karma start
    grunt watch
  </div>

  <p>Je kan de test suite ook handmatig draaien</p>
  <div class="code" data-title="Tests draaien terwijl je ontwikkeld" data-type="terminal">
    npm test
    // or
    grunt test
    // or
    karma run
  </div>

  <h3 class="ui header">Semantic Packages Lokaal Bouwen</h3>
  <p>Er is ook een apart grunt commando voor het bouwen van minified, packaged, en gecomprimeerde versies van de bibliotheek. Dit kan handig zijn wanneer je custom builds van Semantic maakt.</p>

  <div class="code" data-title="Release Bestanden Bouwen" data-type="terminal">
    grunt build
  </div>


  <h3 class="ui header"></h3>

  <div class="ui divider"></div>
  <a class="ui large right labeled teal icon button" href="/introduction.html">
    Eerstvolgend: Bibliotheek Introductie
    <i class="right arrow icon"></i>
  </a>
</div>
