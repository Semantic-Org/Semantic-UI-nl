  ---
layout      : 'default'
css         : 'guide'

title       : 'Overzicht'
description : 'Een introductie tot Semantic stijl coderen'
type        : 'UI Introduction'
---
<script src="/javascript/intro.js"></script>
<script>
$(document)
  .ready(function() {
    $('.demo.menu .item')
      .tab()
    ;
  })
;
</script>

<%- @partial('header') %>
<div class="main container">
  <div class="peek">
    <div class="ui vertical pointing secondary menu">
      <a class="active item">Interfacen</a>
      <a class="item">APIs</a>
    </div>
  </div>
  <h2 class="ui dividing header">Voorzichtig Interfacen</h2>

  <p>UI definities in Semantic krijgen de class name <code>ui</code>. Dit is om te helpen het verschil aan te tonen tussen ui elementen en delen van de definitie van een element. Dit betekent dat elk element met de class name <code>ui</code> een overeenkomstige UI definitie heeft.

  <p>Een menu kan bijvoorbeeld menu items in zich hebben. Deze items zijn onderdeel van de menu definitie maar krijgen niet de class name <code>ui</code> omdat zij onderdeel zijn van een UI menu collectie.</p>

  <div class="code" data-type="html" data-title="Een Simpel Menu" data-preview="true">
    <div class="ui menu">
      <a class="item">Home</a>
      <a class="item">Inbox</a>
    </div>
  </div>

  <h3 class="ui header">Een Element Wijzigen</h3>

  <p>Class names in Semantic gebruiken altijd enkelvoudige Engelse woorden. Indien een class name een adjectief is, is het of een <a href="/introduction/types.html">type</a> element of een <a href="/introduction/variations.html">variatie</a> van een element. <b>CSS definities definiëren altijd adjectieven in de context van een zelfstandig naamwoord</b>. Op deze manier kunnen class names niet de namespace vervuilen.</p>

  <div class="code" data-type="html" data-title="Een Compacte Menu Variatie" data-preview="true">
    <div class="ui compact menu">
      <a class="item">Home</a>
      <a class="item">Inbox</a>
    </div>
  </div>

  <h3 class="ui header">Elementen combineren</h3>
  <p>Alle UI definities in Semantic zijn stand-alone, en vereisen geen andere componenten om te functioneren. Echter, componenten kunnen ervoor kiezen om optionele koppelingen te hebben met andere componenten.</p>

  <p>Zo wil je misschien een badge in een menu stoppen bijvoorbeeld. Eeen label in een menu zal automatisch functioneren als een badge.</p>

  <div class="code" data-type="html" data-title="Een UI Label gebruiken binnen een UI Menu" data-preview="true">
    <div class="ui compact menu">
      <a class="item">Home</a>
      <a class="item">
        Inbox
        <div class="ui label">22</div>
      </a>
    </div>
  </div>

  <h2 class="ui dividing header">Semantic APIs</h2>

  <p>Modules definiëren een publieke API met behulp van werkwoorden en simpele zinssnedes. Wanneer methodes aangeroepen worden, worden die zinssnedes intern automatisch gekoppeld aan interne methodes.</p>

    <div class="code" data-type="html" data-label="true" data-preview="true">
    <div class="ui pointing secondary demo menu">
      <a class="active red item" data-tab="first">Eerste</a>
      <a class="blue item" data-tab="second">Tweede</a>
      <a class="green item" data-tab="third">Derde</a>
    </div>
    <div class="ui active tab segment" data-tab="first">Eerste</div>
    <div class="ui tab segment" data-tab="second">Tweede</div>
    <div class="ui tab segment" data-tab="third">Derde</div>
    </div>
        <h3 class="ui header">Een nieuwe tab openen met een behavior</h3>
        <p>Modules hebben eenvoudig gedrag voor het activeren van algemene acties</p>
        <div class="code" data-demo="true">
    $('.demo.menu .item')
      .tab('change tab', 'second')
    ;
        </div>

        <h3 class="ui header">Een nieuwe tab openen met meerdere behaviors</h3>
        <p>Elke interne behavior is ook toegangkelijk</p>
        <div class="code" data-demo="true">
    $('.demo.menu .item')
      .tab('deactivate all')
      .tab('activate tab', 'third')
      .tab('activate navigation', 'third')
    ;
        </div>
      <h3 class="ui header">HTML5 State Aan Zetten</h3>
      <p>Modules kunnen op elk moment met nieuwe instellingen ge-herinitialiseerd worden</p>
        <div class="code" data-demo="true">
    $('.demo.menu .item')
      .tab({
        history : true,
        path    : '/introduction/getting-started.html'
      })
    ;
        </div>

  <div class="ui divider"></div>

  <a class="ui large right labeled teal icon button" href="/introduction/types.html">
    Eerstvolgend: UI Types
    <i class="right arrow icon"></i>
  </a>

</div>
